<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.tobebetter.dao.english.WordDao">
    <!--设置domain类和数据库中表的字段一一对应，注意数据库字段和domain类中的字段名称不致，此处一定要！-->

    <resultMap id="BaseResultMap" type="xyz.tobebetter.entity.word.Word" >
        <id column="ID" property="id" jdbcType="VARCHAR" />
        <result column="WORD" property="word" jdbcType="VARCHAR" />
        <result column="WORD_PAST" property="wordPast" jdbcType="VARCHAR" />
        <result column="WORD_DONE" property="wordDone" jdbcType="VARCHAR" />
        <result column="WORDER" property="worder" jdbcType="VARCHAR" />
        <result column="WORDEST" property="wordest" jdbcType="VARCHAR" />
        <result column="MEANS" property="means" jdbcType="VARCHAR" />
        <result column="DETAIL" property="detail" jdbcType="VARCHAR" />
        <result column="EN_AUDIO_PATH" property="enAudioPath" jdbcType="VARCHAR" />
        <result column="AM_AUDION_PATH" property="amAudionPath" jdbcType="VARCHAR" />
        <result column="TTS_AUDIO_PATH" property="ttsAudioPath" jdbcType="VARCHAR" />
        <result column="PH_AM" property="phAm" jdbcType="VARCHAR" />
        <result column="PH_EN" property="phEn" jdbcType="VARCHAR" />
        <result column="CREATE_DATE" property="createDate" jdbcType="BIGINT" />
        <result column="UPDATE_DATE" property="updateDate" jdbcType="BIGINT" />
        <result column="STATUS" property="status" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
        t.WORD ,t.WORD_PAST ,t.WORD_DONE ,t.WORDER ,t.WORDEST ,t.MEANS ,t.DETAIL ,t.EN_AUDIO_PATH ,t.AM_AUDION_PATH ,t.TTS_AUDIO_PATH ,t.PH_AM ,t.PH_EN ,t.ID ,t.CREATE_DATE ,t.UPDATE_DATE ,t.STATUS
    </sql>


    <select id="findByEntity" resultMap="BaseResultMap" parameterType="xyz.tobebetter.entity.word.Word" >
        select
        <include refid="Base_Column_List" />
        from WORD t
        <where>
            <if test="word != null" >
                AND WORD =#{word ,jdbcType=VARCHAR }
            </if>
            <if test="wordPast != null" >
                AND WORD_PAST =#{wordPast ,jdbcType=VARCHAR }
            </if>
            <if test="wordDone != null" >
                AND WORD_DONE =#{wordDone ,jdbcType=VARCHAR }
            </if>
            <if test="worder != null" >
                AND WORDER =#{worder ,jdbcType=VARCHAR }
            </if>
            <if test="wordest != null" >
                AND WORDEST =#{wordest ,jdbcType=VARCHAR }
            </if>
            <if test="means != null" >
                AND MEANS =#{means ,jdbcType=VARCHAR }
            </if>
            <if test="detail != null" >
                AND DETAIL =#{detail ,jdbcType=VARCHAR }
            </if>
            <if test="enAudioPath != null" >
                AND EN_AUDIO_PATH =#{enAudioPath ,jdbcType=VARCHAR }
            </if>
            <if test="amAudionPath != null" >
                AND AM_AUDION_PATH =#{amAudionPath ,jdbcType=VARCHAR }
            </if>
            <if test="ttsAudioPath != null" >
                AND TTS_AUDIO_PATH =#{ttsAudioPath ,jdbcType=VARCHAR }
            </if>
            <if test="phAm != null" >
                AND PH_AM =#{phAm ,jdbcType=VARCHAR }
            </if>
            <if test="phEn != null" >
                AND PH_EN =#{phEn ,jdbcType=VARCHAR }
            </if>
            <if test="id != null" >
                AND ID =#{id ,jdbcType=VARCHAR }
            </if>
            <if test="createDate != null" >
                AND CREATE_DATE =#{createDate ,jdbcType=BIGINT }
            </if>
            <if test="updateDate != null" >
                AND UPDATE_DATE =#{updateDate ,jdbcType=BIGINT }
            </if>
            <if test="status != null" >
                AND STATUS =#{status ,jdbcType=INTEGER }
            </if>

        </where>
    </select>

    <select id="findById" resultMap="BaseResultMap" parameterType="xyz.tobebetter.entity.word.Word" >
        select
        <include refid="Base_Column_List" />
        from WORD t
        WHERE t.ID = #{id ,jdbcType=VARCHAR}
    </select>

    <insert  id="create" parameterType="xyz.tobebetter.entity.word.Word" >
        insert into
        WORD
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="word != null" >
                WORD ,
            </if>
            <if test="wordPast != null" >
                WORD_PAST ,
            </if>
            <if test="wordDone != null" >
                WORD_DONE ,
            </if>
            <if test="worder != null" >
                WORDER ,
            </if>
            <if test="wordest != null" >
                WORDEST ,
            </if>
            <if test="means != null" >
                MEANS ,
            </if>
            <if test="detail != null" >
                DETAIL ,
            </if>
            <if test="enAudioPath != null" >
                EN_AUDIO_PATH ,
            </if>
            <if test="amAudionPath != null" >
                AM_AUDION_PATH ,
            </if>
            <if test="ttsAudioPath != null" >
                TTS_AUDIO_PATH ,
            </if>
            <if test="phAm != null" >
                PH_AM ,
            </if>
            <if test="phEn != null" >
                PH_EN ,
            </if>
            <if test="id != null" >
                ID ,
            </if>
            <if test="createDate != null" >
                CREATE_DATE ,
            </if>
            <if test="updateDate != null" >
                UPDATE_DATE ,
            </if>
            <if test="status != null" >
                STATUS ,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="word != null" >
                #{word ,jdbcType=VARCHAR },
            </if>
            <if test="wordPast != null" >
                #{wordPast ,jdbcType=VARCHAR },
            </if>
            <if test="wordDone != null" >
                #{wordDone ,jdbcType=VARCHAR },
            </if>
            <if test="worder != null" >
                #{worder ,jdbcType=VARCHAR },
            </if>
            <if test="wordest != null" >
                #{wordest ,jdbcType=VARCHAR },
            </if>
            <if test="means != null" >
                #{means ,jdbcType=VARCHAR },
            </if>
            <if test="detail != null" >
                #{detail ,jdbcType=VARCHAR },
            </if>
            <if test="enAudioPath != null" >
                #{enAudioPath ,jdbcType=VARCHAR },
            </if>
            <if test="amAudionPath != null" >
                #{amAudionPath ,jdbcType=VARCHAR },
            </if>
            <if test="ttsAudioPath != null" >
                #{ttsAudioPath ,jdbcType=VARCHAR },
            </if>
            <if test="phAm != null" >
                #{phAm ,jdbcType=VARCHAR },
            </if>
            <if test="phEn != null" >
                #{phEn ,jdbcType=VARCHAR },
            </if>
            <if test="id != null" >
                #{id ,jdbcType=VARCHAR },
            </if>
            <if test="createDate != null" >
                #{createDate ,jdbcType=BIGINT },
            </if>
            <if test="updateDate != null" >
                #{updateDate ,jdbcType=BIGINT },
            </if>
            <if test="status != null" >
                #{status ,jdbcType=INTEGER },
            </if>

        </trim>
    </insert>
    <update id="update" parameterType="xyz.tobebetter.entity.word.Word"  >
        update
        WORD
        <set>
            <if test="word != null" >
                WORD =#{word ,jdbcType=VARCHAR },
            </if>
            <if test="wordPast != null" >
                WORD_PAST =#{wordPast ,jdbcType=VARCHAR },
            </if>
            <if test="wordDone != null" >
                WORD_DONE =#{wordDone ,jdbcType=VARCHAR },
            </if>
            <if test="worder != null" >
                WORDER =#{worder ,jdbcType=VARCHAR },
            </if>
            <if test="wordest != null" >
                WORDEST =#{wordest ,jdbcType=VARCHAR },
            </if>
            <if test="means != null" >
                MEANS =#{means ,jdbcType=VARCHAR },
            </if>
            <if test="detail != null" >
                DETAIL =#{detail ,jdbcType=VARCHAR },
            </if>
            <if test="enAudioPath != null" >
                EN_AUDIO_PATH =#{enAudioPath ,jdbcType=VARCHAR },
            </if>
            <if test="amAudionPath != null" >
                AM_AUDION_PATH =#{amAudionPath ,jdbcType=VARCHAR },
            </if>
            <if test="ttsAudioPath != null" >
                TTS_AUDIO_PATH =#{ttsAudioPath ,jdbcType=VARCHAR },
            </if>
            <if test="phAm != null" >
                PH_AM =#{phAm ,jdbcType=VARCHAR },
            </if>
            <if test="phEn != null" >
                PH_EN =#{phEn ,jdbcType=VARCHAR },
            </if>
            <if test="createDate != null" >
                CREATE_DATE =#{createDate ,jdbcType=BIGINT },
            </if>
            <if test="updateDate != null" >
                UPDATE_DATE =#{updateDate ,jdbcType=BIGINT },
            </if>
            <if test="status != null" >
                STATUS =#{status ,jdbcType=INTEGER },
            </if>

        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateStatusById" parameterType="xyz.tobebetter.entity.Entity"  >
        update
        WORD
        <set>
            <if test="status != null" >
                STATUS =#{status ,jdbcType=INTEGER },
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <delete id="delete" parameterType="java.lang.String"  >
        DELETE from  WORD where ID = #{id}
    </delete>

    <!-- 查询单条记录 -->

    <select id="findAll" resultMap="BaseResultMap">
        SELECT * FROM WORD W
    </select>
    
    <select id="findByWord" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List" />
        FROM WORD W  where word = #{word,jdbcType=VARCHAR}  LIMIT 0,1
    </select>
    
   
    
    <select id="getCount" resultType="java.lang.Long" >
        SELECT 
        count(*)
        FROM  WORD
    </select>


    
    <select id="findByContentId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT 
        <include refid="Base_Column_List" />
        FROM  WORD t LEFT JOIN WORD_AND_SEGMENT cw ON t.id = cw.WORD_ID WHERE cw.CONTENT_ID =   #{contentId,jdbcType=VARCHAR}
    </select>



    <select id="findBySegmentId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List" />
        FROM  WORD t LEFT JOIN WORD_AND_SEGMENT cw ON t.id = cw.WORD_ID WHERE cw.SEGMENT_ID =   #{segmentId,jdbcType=VARCHAR}
    </select>

    <select id="findByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT 
        <include refid="Base_Column_List" />
        FROM  WORD t LEFT JOIN USER_AND_WORD cw ON t.ID = cw.WORD_ID WHERE cw.USER_ID =   #{userId,jdbcType=VARCHAR}
    </select>
    
    
    <select id="findRecitingByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT 
        <include refid="Base_Column_List" />
        FROM  WORD t LEFT JOIN USER_AND_WORD cw ON t.ID = cw.WORD_ID WHERE cw.USER_ID =   #{userId,jdbcType=VARCHAR} AND cw.TYPE = 1 ORDER BY cw.RECITE_COUNT DESC
    </select>


    <select id="findMyReciteWordByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List" />
        FROM  WORD t LEFT JOIN USER_AND_WORD cw ON t.ID = cw.WORD_ID WHERE cw.USER_ID =   #{userId,jdbcType=VARCHAR} AND  cw.TYPE = 0 ORDER BY  cw.RECITE_COUNT ASC,cw.UPDATE_DATE DESC
    </select>
    
    <select id="findUnReciteByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT 
        <include refid="Base_Column_List" />
        FROM  WORD t LEFT JOIN USER_AND_WORD cw ON t.ID = cw.WORD_ID WHERE cw.USER_ID =   #{userId,jdbcType=VARCHAR} AND cw.TYPE &lt;&gt; 2
    </select>
    
    <select id="findHasReciteByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT 
        <include refid="Base_Column_List" />
        FROM  WORD t LEFT JOIN USER_AND_WORD cw ON t.ID = cw.WORD_ID WHERE cw.USER_ID =   #{userId,jdbcType=VARCHAR} AND cw.TYPE = 2
    </select>
    
    <select id="findByUserIdAndWordId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT 
        <include refid="Base_Column_List" />
        FROM  WORD t LEFT JOIN CONTENT_WORD_USER cw ON t.ID = cw.WORD_ID
        WHERE cw.USER_ID =   #{userId,jdbcType=VARCHAR} and t.ID =   #{wordId,jdbcType=VARCHAR}
    </select>
    


    <select id="findByUserIdAndContentId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List" />
        FROM  WORD t LEFT JOIN CONTENT_WORD_USER cw ON t.ID = cw.WORD_ID
        WHERE cw.USER_ID =   #{userId,jdbcType=VARCHAR} and  cw.CONTENT_ID =   #{contentId,jdbcType=VARCHAR}
    </select>

    <select id="find" resultMap="BaseResultMap" parameterType="xyz.tobebetter.entity.Page">
        SELECT 
        <include refid="Base_Column_List" />
        FROM  WORD t LIMIT #{startIndex},#{pageSize}
    </select>
    <select id="search" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM WORD t  where word LIKE CONCAT('%',#{word,jdbcType=VARCHAR} ,'%')
    </select>


    <select id="findByShortWordId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List" />
        FROM  WORD t LEFT JOIN SHORT_WORD_AND_WORD cw ON t.ID = cw.WORD_ID
        WHERE cw.SHORT_WORD_ID =   #{shortWordId,jdbcType=VARCHAR}
    </select>


</mapper>